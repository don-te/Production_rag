# .github/workflows/docker-build.yml

name: Build and Push Docker Image

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-push:
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest

    # Define permissions for actions to write to GHCR
    permissions:
      contents: read
      packages: write

    steps:
      # 1. Check out your repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Log in to the GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. Set up Docker Buildx (Installs the CLI)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. ⭐️ THE FIX: Create a new builder instance using the docker-container driver
      #    This is required for 'cache-to' (cache export) to work.
      - name: Create Builder with Container Driver
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          append: false # Creates a new builder instead of adding to the default one

      # 5. Build and push the Docker image
      #    This step now uses the new builder instance created above.
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          # Set the build context to the current directory
          context: .
          
          # Push the image to the registry after building
          push: true
          
          # Define the tags for your image
          # This example tags 'latest' and also tags with the specific Git commit SHA
          tags: |
            ghcr.io/don-te/Production_rag:latest
            ghcr.io/don-te/Production_rag:${{ github.sha }}
            
          # Enable caching to speed up future builds
          # Reads from the GitHub Actions cache
          cache-from: type=gha
          
          # Writes to the GitHub Actions cache (this is what was failing)
          cache-to: type=gha,mode=max