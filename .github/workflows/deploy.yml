# .github/workflows/deploy.yml
name: Build and Deploy to Cloud Run

# 1. Trigger: Run this workflow on a push to the 'main' branch
on:
  push:
    branches:
      - main

# 2. Environment Variables: Pull secrets from GitHub
env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
  OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
  
  # Set your repository name and GCP region
  REPOSITORY_NAME: rag-api-repo # Name of your Artifact Registry repo
  SERVICE_NAME: rag-api-service # Name of your Cloud Run service
  REGION: us-central1 # Change to your preferred GCP region

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write' # Permission to push to GitHub Container Registry

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    # 3. Log in to GitHub Container Registry (ghcr.io)
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # 4. Build and Push Docker Image
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        # Tag the image with the GitHub SHA and 'latest'
        tags: |
          ghcr.io/${{ github.repository }}:${{ github.sha }}
          ghcr.io/${{ github.repository }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # 5. Authenticate to Google Cloud
    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: ${{ env.GCP_SERVICE_ACCOUNT }}

    # 6. Deploy to Google Cloud Run
    - name: Deploy to Cloud Run
      id: deploy
      uses: 'google-github-actions/deploy-cloudrun@v2'
      with:
        service: ${{ env.SERVICE_NAME }}
        region: ${{ env.REGION }}
        # Use the image we just pushed to GHCR
        image: ghcr.io/${{ github.repository }}:${{ github.sha }}
        # Inject the OpenRouter API key as a runtime environment variable
        env_vars: |
          OPENROUTER_API_KEY=${{ env.OPENROUTER_API_KEY }}

    # 7. Output the live URL
    - name: Show Live URL
      if: success() && steps.deploy.outputs.url != '' # Only run if deploy succeeded and URL is not empty
      run: |
        echo "ðŸš€ Deployment successful! Live URL: ${{ steps.deploy.outputs.url }}"
